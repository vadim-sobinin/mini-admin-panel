(()=>{"use strict";const e=e=>{const t=document.querySelector("#table-body");t.innerHTML="",e.forEach((e=>{const r=t.childElementCount+1,n=document.createElement("tr");n.setAttribute("id",e.id),n.innerHTML=`\n      <th scope="row">${r}</th>\n      <td>${e.name}</td>\n      <td>${e.email}</td>\n      <td>${e.children?"has":"has not"}</td>\n      <td>\n        <div class="form-check form-switch">\n          <input\n            class="form-check-input"\n            type="checkbox"\n            role="switch"\n            id="form-permission"\n          />\n        </div>\n      </td>\n      <td>\n        <div class="btn-group btn-group-sm" role="group" aria-label="Basic example">\n          <button type="button" class="btn btn-warning" id="edit-btn">\n            <i class="bi-pencil-square"></i>\n          </button>\n          <button type="button" class="btn btn-danger" id="remove-btn">\n            <i class="bi-person-x"></i>\n          </button>\n        </div>\n      </td>`,n.querySelector("#form-permission").checked=e.permission,t.append(n)}))};window.userServices=new class{getUsers(){return fetch("http://localhost:4545/users").then((e=>e.json()))}addUser(e){return fetch("http://localhost:4545/users",{method:"POST",body:JSON.stringify(e),headers:{"Content-Type":"application/json; charset=utf-8"}}).then((e=>e.json))}removeUser(e){return fetch(`http://localhost:4545/users/${e}`,{method:"DELETE"}).then((e=>e.json))}editUser(e,t){return fetch(`http://localhost:4545/users/${e}`,{method:"PUT",body:JSON.stringify(t),headers:{"Content-Type":"application/json; charset=utf-8"}}).then((e=>e.json))}},userServices.getUsers().then((t=>{e(t)})),(()=>{const t=document.querySelector("form");t.addEventListener("submit",(r=>{if(r.preventDefault(),!t.querySelector(".btn-save").hasAttribute("id")){const r={name:t.querySelector("#form-name").value,email:t.querySelector("#form-email").value,children:t.querySelector("#form-children").checked,permission:!1};userServices.addUser(r).then((()=>{userServices.getUsers().then((t=>e(t))).then((()=>(t.querySelector("#form-name").value="",t.querySelector("#form-email").value="",void(t.querySelector("#form-children").checked=!1))))}))}}))})(),document.querySelector("#table-body").addEventListener("click",(t=>{if(t.target.closest("#remove-btn")){const r=t.target.closest("tr").getAttribute("id");userServices.removeUser(r).then((()=>{userServices.getUsers().then((t=>e(t)))}))}})),(()=>{const t=document.querySelector("#table-body"),r=document.querySelector("form"),n=r.querySelector("#form-name"),s=r.querySelector("#form-email"),o=r.querySelector("#form-children");t.addEventListener("click",(t=>{if(t.target.closest("#edit-btn")){const c=t.target.closest("tr").getAttribute("id"),i=t.target.closest("tr").children;n.value=i[1].textContent,s.value=i[2].textContent,o.checked="has"==i[3].textContent;const l=r.querySelector(".btn-save");l.setAttribute("id",`save${c}`),l.classList.replace("btn-success","btn-warning"),l.textContent="Save changes",l.addEventListener("click",(t=>{if(r.querySelector(".btn-save").hasAttribute("id")){const t={name:r.querySelector("#form-name").value,email:r.querySelector("#form-email").value,children:r.querySelector("#form-children").checked,permission:i[4].querySelector("#form-permission").checked};userServices.editUser(c,t).then((()=>{userServices.getUsers().then((t=>e(t))).then((()=>(()=>{n.value="",s.value="",o.checked=!1;const e=r.querySelector(".btn-save");e.removeAttribute("id"),e.classList.replace("btn-warning","btn-success"),e.textContent="Save"})()))}))}}))}}))})()})();